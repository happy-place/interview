package com.bigdata.designpattern.template;

/**
 * 模板设计模式
 * 父类某方法封装了复杂调用流程（其他方法），只对子类暴露控制局部调用流程的方法，调用流程控制在父类手中，子类修改局部，产生差异化调用效果；
 * 凡是涉及钩子、监听器、回调的场景，实际让开发人员写的代码极少，真正调用钩子、回调、监听器的过程封装在父类中；
 */
