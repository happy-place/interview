package com.bigdata.designpattern.factory;

/**
 * 工厂设计模式
 * 1.凡是通过调用方法获取对象的方式，包括构造器，静态方法在内都属于工厂设计模式；
 * 2.工厂设计模式常用在对象创建过程比较复杂的场景，如获取jdbc连接池，事务等，此外在对象生产前后，还可以执行前置或后置处理操作，如：日志、鉴权、修饰等；
 *
 * 分类：
 * 简单工厂：
 *      1.将特定需求抽象为借口，新增产品，只需新增实现即可；
 *      2.使用到的地方，通过接口引用；
 *      3.适合拓展某一类产品；
 * 抽象工厂：
 *      1.若干特定需求抽象为各自的接口或抽象类，向对应用于各自的不同实现类；
 *      2.获取不需求的操作封装在一个抽象工厂，针对不同场景，创建各自的场景工厂实现类；
 *      3.适合拓展一簇需求产品；
 *
 *
 *
 */