package com.bigdata.decorator;

/**
 * 装饰器设计模式
 * 1.属于自处理设计模式；
 * 2.目标是在被装饰者执行特定操作前后，添加其余相关操作，原来调用被装饰者位置，改为调用装饰者，在目标方法被调用同时，自处理代码也执行了
 * 3.装饰通常按场景划分，而且适用于系统中多种类型对象，因此往往可以在需要被装饰的类基础上，抽象公共父类，然后装饰者中持有的被装饰对象引用，
 * 从具体类，变成抽象父类，实现装饰逻辑复用；
 * 3.此外多场景重叠时，可以让装饰器也实现被装饰类的父类，外层装饰器持有内层装饰器引用，从而实现装饰逻辑的嵌套调用
 *
 */